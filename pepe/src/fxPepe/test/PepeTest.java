package fxPepe.test;
// Generated by ComTest BEGIN
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import fxPepe.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.02.29 02:27:42 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class PepeTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa41 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa41() throws SailoException {    // Pepe: 41
    Pepe pepe = new Pepe(); 
    Peli cnc = new Peli(), d2 = new Peli(); 
    cnc.rekisteroi(); d2.rekisteroi(); 
    assertEquals("From: Pepe line: 46", 0, pepe.getPeleja()); 
    pepe.lisaa(cnc); assertEquals("From: Pepe line: 47", 1, pepe.getPeleja()); 
    pepe.lisaa(d2); assertEquals("From: Pepe line: 48", 2, pepe.getPeleja()); 
    pepe.lisaa(cnc); assertEquals("From: Pepe line: 49", 3, pepe.getPeleja()); 
    assertEquals("From: Pepe line: 50", 3, pepe.getPeleja()); 
    assertEquals("From: Pepe line: 51", cnc, pepe.annaPeli(0)); 
    assertEquals("From: Pepe line: 52", d2, pepe.annaPeli(1)); 
    assertEquals("From: Pepe line: 53", cnc, pepe.annaPeli(2)); 
    try {
    assertEquals("From: Pepe line: 54", cnc, pepe.annaPeli(3)); 
    fail("Pepe: 54 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    pepe.lisaa(cnc); assertEquals("From: Pepe line: 55", 4, pepe.getPeleja()); 
    pepe.lisaa(cnc); assertEquals("From: Pepe line: 56", 5, pepe.getPeleja()); 
    try {
    pepe.lisaa(cnc); 
    fail("Pepe: 57 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaPeliTiedot90 */
  @Test
  public void testAnnaPeliTiedot90() {    // Pepe: 90
    Pepe p = new Pepe(); 
    Peli g1 = new Peli(), g2 = new Peli(), g3 = new Peli(); 
    g1.rekisteroi(); g2.rekisteroi(); g3.rekisteroi(); 
    int id1 = g1.getTunniste(); 
    int id2 = g2.getTunniste(); 
    PeliTieto tieto11 = new PeliTieto(id1); p.lisaa(tieto11); 
    PeliTieto tieto12 = new PeliTieto(id1); p.lisaa(tieto12); 
    PeliTieto tieto21 = new PeliTieto(id2); p.lisaa(tieto21); 
    PeliTieto tieto22 = new PeliTieto(id2); p.lisaa(tieto22); 
    PeliTieto tieto23 = new PeliTieto(id2); p.lisaa(tieto23); 
    List<PeliTieto> loytyneet; 
    loytyneet = p.annaPeliTiedot(g3); 
    assertEquals("From: Pepe line: 106", 0, loytyneet.size()); 
    loytyneet = p.annaPeliTiedot(g1); 
    assertEquals("From: Pepe line: 108", 2, loytyneet.size()); 
    assertEquals("From: Pepe line: 109", true, loytyneet.get(0) == tieto11); 
    assertEquals("From: Pepe line: 110", true, loytyneet.get(1) == tieto12); 
    loytyneet = p.annaPeliTiedot(g2); 
    assertEquals("From: Pepe line: 112", 3, loytyneet.size()); 
    assertEquals("From: Pepe line: 113", true, loytyneet.get(0) == tieto21); 
  } // Generated by ComTest END
}